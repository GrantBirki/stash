name: ci

on:
  push:
    branches:
      - main
  pull_request:
    branches: [ main ]

jobs:

  new-pr:
    permissions:
      pull-requests: write
      contents: read

    if: github.event_name == 'pull_request' && github.event.action == 'opened' && github.event.pull_request.head.repo.fork != 'true'
    runs-on: ubuntu-latest

    steps:
      # Comment on new PR requests with deployment instructions
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # pin@v3.0.2
      - name: comment
        uses: GrantBirki/comment@5f428382792637d756694f5e0ca49ba56354125c # pin@v2.0.0
        with:
          file: .github/new-pr-comment.md

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # pin@v3.0.2

      - name: Cache node modules
        uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed # pin@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install
        run: npm ci

      # TODO add tests here

  deploy:
    if: github.event_name == 'push'
    needs: [ test ]
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # pin@v3.0.2

      - name: Cache node modules
        uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed # pin@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: npm install

      - name: Register Slash Commands
        env:
          NODE_ENV: ci
          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
          DISCORD_CLIENT_ID: ${{ secrets.DISCORD_CLIENT_ID }}
        run: node deploy-commands.mjs

      - name: Deploy to Heroku
        uses: AkhileshNS/heroku-deploy@79ef2ae4ff9b897010907016b268fd0f88561820 # pin@v3.12.12
        with:
          heroku_app_name: stash-eft
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}

      - name: Create Sentry release
        uses: getsentry/action-release@744e4b262278339b79fb39c8922efcae71e98e39 # pin@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: tarkov-dev
          SENTRY_PROJECT: stash
        with:
          environment: production
